# Judge0 Autoscaler - Azure Function App Configuration

# Storage Account for Azure Function runtime (required by Azure Functions platform)
# Note: This is NOT for deployment - we use direct ZIP deployment
# This storage is used by Azure Functions for internal operations, triggers, logs, etc.
# resource "azurerm_storage_account" "autoscaler_storage" {
#   name                     = "judge0autoscaler${random_string.unique_suffix.result}"
#   resource_group_name      = azurerm_resource_group.main.name
#   location                 = azurerm_resource_group.main.location
#   account_tier             = "Standard"
#   account_replication_type = "LRS"

#   tags = {
#     Environment = "production"
#     Application = "judge0"
#     Component   = "autoscaler-runtime-storage"
#   }
# }

# Application Insights for monitoring
# resource "azurerm_application_insights" "autoscaler_insights" {
#   name                = "judge0-autoscaler-insights"
#   location            = azurerm_resource_group.main.location
#   resource_group_name = azurerm_resource_group.main.name
#   application_type    = "Node.JS"

#   tags = {
#     Environment = "production"
#     Application = "judge0"
#     Component   = "autoscaler-monitoring"
#   }
# }

# Service Plan for Azure Function (Consumption Plan)
resource "azurerm_service_plan" "autoscaler_plan" {
  name                = "judge0-autoscaler-plan"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  os_type             = "Linux"
  sku_name            = "Y1" # Consumption plan

  tags = {
    Environment = "production"
    Application = "judge0"
    Component   = "autoscaler-plan"
  }
}

# Azure Function App
resource "azurerm_linux_function_app" "judge0_autoscaler" {
  name                = "judge0-autoscaler-${random_string.unique_suffix.result}"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location

  # storage_account_name       = azurerm_storage_account.autoscaler_storage.name
  # storage_account_access_key = azurerm_storage_account.autoscaler_storage.primary_access_key
  service_plan_id = azurerm_service_plan.autoscaler_plan.id

  site_config {
    application_stack {
      node_version = "22"
    }

    cors {
      allowed_origins = ["*"]
    }
  }

  app_settings = {
    FUNCTIONS_WORKER_RUNTIME       = "node"
    WEBSITE_NODE_DEFAULT_VERSION   = "~22"
    APPINSIGHTS_INSTRUMENTATIONKEY = azurerm_application_insights.autoscaler_insights.instrumentation_key

    # Judge0 Configuration
    # JUDGE0_SERVER_URL = "https://${azurerm_container_app.judge0_server.latest_revision_fqdn}"
    JUDGE0_SERVER_URL = "https://${azurerm_container_app.judge0_server.ingress[0].fqdn}"
    JUDGE0_AUTH_TOKEN = var.authn_token

    # Azure Configuration
    AZURE_SUBSCRIPTION_ID = data.azurerm_client_config.current.subscription_id
    AZURE_RESOURCE_GROUP  = azurerm_resource_group.main.name
    AZURE_TENANT_ID       = data.azurerm_client_config.current.tenant_id
    AZURE_LOCATION        = azurerm_resource_group.main.location

    # Judge0 Container Configuration (for dynamic container creation)
    JUDGE0_IMAGE_TAG = var.judge0_image_tag
    REDIS_HOST       = var.redis_host
    REDIS_USE_SSL    = var.redis_use_ssl
    REDIS_URL        = var.redis_url

    # Upstash Redis Configuration for Autoscaler (HTTP-based)
    REDIS_HTTP_HOST  = var.redis_http_host
    REDIS_HTTP_TOKEN = var.redis_http_token

    DATABASE_URL    = var.database_url
    SECRET_KEY_BASE = var.secret_key_base
    AUTHN_TOKEN     = var.authn_token
    AUTHZ_TOKEN     = var.authz_token
    WORKER_INTERVAL = var.worker_interval
    WORKER_COUNT    = var.worker_count != null ? tostring(var.worker_count) : ""
    MAX_QUEUE_SIZE  = tostring(var.max_queue_size)
    RAILS_ENV       = var.rails_env

    # Worker Resource Configuration (matching Terraform worker.tf)
    WORKER_CPU            = "1.0"
    WORKER_MEMORY_GB      = "2.0"
    WORKER_RESTART_POLICY = "OnFailure"
    ENVIRONMENT           = "production"

    # Judge0 Execution Limits (matching Terraform worker.tf)
    CPU_TIME_LIMIT                                 = tostring(var.cpu_time_limit)
    MAX_CPU_TIME_LIMIT                             = tostring(var.max_cpu_time_limit)
    CPU_EXTRA_TIME                                 = tostring(var.cpu_extra_time)
    MAX_CPU_EXTRA_TIME                             = tostring(var.max_cpu_extra_time)
    WALL_TIME_LIMIT                                = tostring(var.wall_time_limit)
    MAX_WALL_TIME_LIMIT                            = tostring(var.max_wall_time_limit)
    MEMORY_LIMIT                                   = tostring(var.memory_limit)
    MAX_MEMORY_LIMIT                               = tostring(var.max_memory_limit)
    STACK_LIMIT                                    = tostring(var.stack_limit)
    MAX_STACK_LIMIT                                = tostring(var.max_stack_limit)
    MAX_PROCESSES_AND_OR_THREADS                   = tostring(var.max_processes_and_or_threads)
    MAX_MAX_PROCESSES_AND_OR_THREADS               = tostring(var.max_max_processes_and_or_threads)
    ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT       = tostring(var.enable_per_process_and_thread_time_limit)
    ALLOW_ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT = tostring(var.allow_enable_per_process_and_thread_time_limit)

    # Scaling Configuration
    MIN_WORKERS          = var.min_workers
    MAX_WORKERS          = var.max_workers
    SCALE_UP_THRESHOLD   = var.scale_up_threshold
    SCALE_DOWN_THRESHOLD = var.scale_down_threshold
    MAX_IDLE_WORKERS     = var.max_idle_workers
    CONTAINER_GROUP_NAME = "judge0-worker" # Base name for worker instances (will be suffixed with instance number)
    ALLOW_INFINITE_SCALE = var.allow_infinite_scale

    # Timing Configuration
    SCALE_CHECK_INTERVAL   = var.scale_check_interval
    SCALE_COOLDOWN_MINUTES = var.scale_cooldown_minutes
  }

  identity {
    type = "SystemAssigned"
  }

  tags = {
    Environment = "production"
    Application = "judge0"
    Component   = "autoscaler"
  }
}

# Random string for unique naming
resource "random_string" "unique_suffix" {
  length  = 8
  special = false
  upper   = false
}

# Get current Azure client configuration
data "azurerm_client_config" "current" {}

# Role assignment for the Function App to manage Container Instances
resource "azurerm_role_assignment" "autoscaler_contributor" {
  scope                = azurerm_resource_group.main.id
  role_definition_name = "Contributor"
  principal_id         = azurerm_linux_function_app.judge0_autoscaler.identity[0].principal_id
}

# Output Function App URL for reference
output "autoscaler_function_app_url" {
  value       = "https://${azurerm_linux_function_app.judge0_autoscaler.default_hostname}"
  description = "URL of the Judge0 autoscaler function app"
}
