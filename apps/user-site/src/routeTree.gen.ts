/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedProfileRouteImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedHomeRouteImport } from './routes/_authenticated/home'
import { Route as AuthenticatedChatRouteImport } from './routes/_authenticated/chat'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthSigninRouteImport } from './routes/_auth/signin'
import { Route as AuthenticatedRubricsIndexRouteImport } from './routes/_authenticated/rubrics/index'
import { Route as AuthenticatedGradingsIndexRouteImport } from './routes/_authenticated/gradings/index'
import { Route as AuthenticatedRubricsCreateRouteImport } from './routes/_authenticated/rubrics/create'
import { Route as AuthenticatedGradingsCreateRouteImport } from './routes/_authenticated/gradings/create'
import { Route as AuthenticatedGradingsIdRouteImport } from './routes/_authenticated/gradings/$id'
import { Route as AuthenticatedAssessmentsIdRouteImport } from './routes/_authenticated/assessments/$id'
import { Route as AuthenticatedReviewAnalyticsRouteImport } from './routes/_authenticated/_review/analytics'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedProfileRoute = AuthenticatedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedHomeRoute = AuthenticatedHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedChatRoute = AuthenticatedChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthenticatedRubricsIndexRoute =
  AuthenticatedRubricsIndexRouteImport.update({
    id: '/rubrics/',
    path: '/rubrics/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedGradingsIndexRoute =
  AuthenticatedGradingsIndexRouteImport.update({
    id: '/gradings/',
    path: '/gradings/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedRubricsCreateRoute =
  AuthenticatedRubricsCreateRouteImport.update({
    id: '/rubrics/create',
    path: '/rubrics/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedGradingsCreateRoute =
  AuthenticatedGradingsCreateRouteImport.update({
    id: '/gradings/create',
    path: '/gradings/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedGradingsIdRoute = AuthenticatedGradingsIdRouteImport.update({
  id: '/gradings/$id',
  path: '/gradings/$id',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAssessmentsIdRoute =
  AuthenticatedAssessmentsIdRouteImport.update({
    id: '/assessments/$id',
    path: '/assessments/$id',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedReviewAnalyticsRoute =
  AuthenticatedReviewAnalyticsRouteImport.update({
    id: '/_review/analytics',
    path: '/analytics',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/chat': typeof AuthenticatedChatRoute
  '/home': typeof AuthenticatedHomeRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/analytics': typeof AuthenticatedReviewAnalyticsRoute
  '/assessments/$id': typeof AuthenticatedAssessmentsIdRoute
  '/gradings/$id': typeof AuthenticatedGradingsIdRoute
  '/gradings/create': typeof AuthenticatedGradingsCreateRoute
  '/rubrics/create': typeof AuthenticatedRubricsCreateRoute
  '/gradings': typeof AuthenticatedGradingsIndexRoute
  '/rubrics': typeof AuthenticatedRubricsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/chat': typeof AuthenticatedChatRoute
  '/home': typeof AuthenticatedHomeRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/analytics': typeof AuthenticatedReviewAnalyticsRoute
  '/assessments/$id': typeof AuthenticatedAssessmentsIdRoute
  '/gradings/$id': typeof AuthenticatedGradingsIdRoute
  '/gradings/create': typeof AuthenticatedGradingsCreateRoute
  '/rubrics/create': typeof AuthenticatedRubricsCreateRoute
  '/gradings': typeof AuthenticatedGradingsIndexRoute
  '/rubrics': typeof AuthenticatedRubricsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_authenticated/chat': typeof AuthenticatedChatRoute
  '/_authenticated/home': typeof AuthenticatedHomeRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/_review/analytics': typeof AuthenticatedReviewAnalyticsRoute
  '/_authenticated/assessments/$id': typeof AuthenticatedAssessmentsIdRoute
  '/_authenticated/gradings/$id': typeof AuthenticatedGradingsIdRoute
  '/_authenticated/gradings/create': typeof AuthenticatedGradingsCreateRoute
  '/_authenticated/rubrics/create': typeof AuthenticatedRubricsCreateRoute
  '/_authenticated/gradings/': typeof AuthenticatedGradingsIndexRoute
  '/_authenticated/rubrics/': typeof AuthenticatedRubricsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/signup'
    | '/chat'
    | '/home'
    | '/profile'
    | '/analytics'
    | '/assessments/$id'
    | '/gradings/$id'
    | '/gradings/create'
    | '/rubrics/create'
    | '/gradings'
    | '/rubrics'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/signup'
    | '/chat'
    | '/home'
    | '/profile'
    | '/analytics'
    | '/assessments/$id'
    | '/gradings/$id'
    | '/gradings/create'
    | '/rubrics/create'
    | '/gradings'
    | '/rubrics'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_authenticated'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_authenticated/chat'
    | '/_authenticated/home'
    | '/_authenticated/profile'
    | '/_authenticated/_review/analytics'
    | '/_authenticated/assessments/$id'
    | '/_authenticated/gradings/$id'
    | '/_authenticated/gradings/create'
    | '/_authenticated/rubrics/create'
    | '/_authenticated/gradings/'
    | '/_authenticated/rubrics/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/home': {
      id: '/_authenticated/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/chat': {
      id: '/_authenticated/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthenticatedChatRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_authenticated/rubrics/': {
      id: '/_authenticated/rubrics/'
      path: '/rubrics'
      fullPath: '/rubrics'
      preLoaderRoute: typeof AuthenticatedRubricsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/gradings/': {
      id: '/_authenticated/gradings/'
      path: '/gradings'
      fullPath: '/gradings'
      preLoaderRoute: typeof AuthenticatedGradingsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/rubrics/create': {
      id: '/_authenticated/rubrics/create'
      path: '/rubrics/create'
      fullPath: '/rubrics/create'
      preLoaderRoute: typeof AuthenticatedRubricsCreateRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/gradings/create': {
      id: '/_authenticated/gradings/create'
      path: '/gradings/create'
      fullPath: '/gradings/create'
      preLoaderRoute: typeof AuthenticatedGradingsCreateRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/gradings/$id': {
      id: '/_authenticated/gradings/$id'
      path: '/gradings/$id'
      fullPath: '/gradings/$id'
      preLoaderRoute: typeof AuthenticatedGradingsIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/assessments/$id': {
      id: '/_authenticated/assessments/$id'
      path: '/assessments/$id'
      fullPath: '/assessments/$id'
      preLoaderRoute: typeof AuthenticatedAssessmentsIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/_review/analytics': {
      id: '/_authenticated/_review/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AuthenticatedReviewAnalyticsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface AuthenticatedRouteRouteChildren {
  AuthenticatedChatRoute: typeof AuthenticatedChatRoute
  AuthenticatedHomeRoute: typeof AuthenticatedHomeRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedReviewAnalyticsRoute: typeof AuthenticatedReviewAnalyticsRoute
  AuthenticatedAssessmentsIdRoute: typeof AuthenticatedAssessmentsIdRoute
  AuthenticatedGradingsIdRoute: typeof AuthenticatedGradingsIdRoute
  AuthenticatedGradingsCreateRoute: typeof AuthenticatedGradingsCreateRoute
  AuthenticatedRubricsCreateRoute: typeof AuthenticatedRubricsCreateRoute
  AuthenticatedGradingsIndexRoute: typeof AuthenticatedGradingsIndexRoute
  AuthenticatedRubricsIndexRoute: typeof AuthenticatedRubricsIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedChatRoute: AuthenticatedChatRoute,
  AuthenticatedHomeRoute: AuthenticatedHomeRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedReviewAnalyticsRoute: AuthenticatedReviewAnalyticsRoute,
  AuthenticatedAssessmentsIdRoute: AuthenticatedAssessmentsIdRoute,
  AuthenticatedGradingsIdRoute: AuthenticatedGradingsIdRoute,
  AuthenticatedGradingsCreateRoute: AuthenticatedGradingsCreateRoute,
  AuthenticatedRubricsCreateRoute: AuthenticatedRubricsCreateRoute,
  AuthenticatedGradingsIndexRoute: AuthenticatedGradingsIndexRoute,
  AuthenticatedRubricsIndexRoute: AuthenticatedRubricsIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
