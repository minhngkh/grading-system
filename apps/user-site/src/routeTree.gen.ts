/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedTestImport } from './routes/_authenticated/test'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedHomeImport } from './routes/_authenticated/home'
import { Route as AuthenticatedChatImport } from './routes/_authenticated/chat'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthSigninImport } from './routes/_auth/signin'
import { Route as AuthenticatedRubricsViewImport } from './routes/_authenticated/rubrics/view'
import { Route as AuthenticatedRubricsCreateImport } from './routes/_authenticated/rubrics/create'
import { Route as AuthenticatedRubricsIdImport } from './routes/_authenticated/rubrics/$id'
import { Route as AuthenticatedGradingsViewImport } from './routes/_authenticated/gradings/view'
import { Route as AuthenticatedGradingsCreateImport } from './routes/_authenticated/gradings/create'
import { Route as AuthenticatedGradingsGradingIdIndexImport } from './routes/_authenticated/gradings/$gradingId/index'
import { Route as AuthenticatedGradingsGradingIdResultImport } from './routes/_authenticated/gradings/$gradingId/result'
import { Route as AuthenticatedGradingsGradingIdAnalyticsImport } from './routes/_authenticated/gradings/$gradingId/analytics'
import { Route as AuthenticatedGradingsGradingIdAssessmentsAssessmentIdImport } from './routes/_authenticated/gradings/$gradingId/assessments/$assessmentId'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedTestRoute = AuthenticatedTestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedHomeRoute = AuthenticatedHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedChatRoute = AuthenticatedChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthenticatedRubricsViewRoute = AuthenticatedRubricsViewImport.update({
  id: '/rubrics/view',
  path: '/rubrics/view',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedRubricsCreateRoute = AuthenticatedRubricsCreateImport.update(
  {
    id: '/rubrics/create',
    path: '/rubrics/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedRubricsIdRoute = AuthenticatedRubricsIdImport.update({
  id: '/rubrics/$id',
  path: '/rubrics/$id',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedGradingsViewRoute = AuthenticatedGradingsViewImport.update({
  id: '/gradings/view',
  path: '/gradings/view',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedGradingsCreateRoute =
  AuthenticatedGradingsCreateImport.update({
    id: '/gradings/create',
    path: '/gradings/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedGradingsGradingIdIndexRoute =
  AuthenticatedGradingsGradingIdIndexImport.update({
    id: '/gradings/$gradingId/',
    path: '/gradings/$gradingId/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedGradingsGradingIdResultRoute =
  AuthenticatedGradingsGradingIdResultImport.update({
    id: '/gradings/$gradingId/result',
    path: '/gradings/$gradingId/result',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedGradingsGradingIdAnalyticsRoute =
  AuthenticatedGradingsGradingIdAnalyticsImport.update({
    id: '/gradings/$gradingId/analytics',
    path: '/gradings/$gradingId/analytics',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedGradingsGradingIdAssessmentsAssessmentIdRoute =
  AuthenticatedGradingsGradingIdAssessmentsAssessmentIdImport.update({
    id: '/gradings/$gradingId/assessments/$assessmentId',
    path: '/gradings/$gradingId/assessments/$assessmentId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthRouteImport
    }
    '/_authenticated/chat': {
      id: '/_authenticated/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthenticatedChatImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/home': {
      id: '/_authenticated/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/test': {
      id: '/_authenticated/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof AuthenticatedTestImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/gradings/create': {
      id: '/_authenticated/gradings/create'
      path: '/gradings/create'
      fullPath: '/gradings/create'
      preLoaderRoute: typeof AuthenticatedGradingsCreateImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/gradings/view': {
      id: '/_authenticated/gradings/view'
      path: '/gradings/view'
      fullPath: '/gradings/view'
      preLoaderRoute: typeof AuthenticatedGradingsViewImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/rubrics/$id': {
      id: '/_authenticated/rubrics/$id'
      path: '/rubrics/$id'
      fullPath: '/rubrics/$id'
      preLoaderRoute: typeof AuthenticatedRubricsIdImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/rubrics/create': {
      id: '/_authenticated/rubrics/create'
      path: '/rubrics/create'
      fullPath: '/rubrics/create'
      preLoaderRoute: typeof AuthenticatedRubricsCreateImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/rubrics/view': {
      id: '/_authenticated/rubrics/view'
      path: '/rubrics/view'
      fullPath: '/rubrics/view'
      preLoaderRoute: typeof AuthenticatedRubricsViewImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/gradings/$gradingId/analytics': {
      id: '/_authenticated/gradings/$gradingId/analytics'
      path: '/gradings/$gradingId/analytics'
      fullPath: '/gradings/$gradingId/analytics'
      preLoaderRoute: typeof AuthenticatedGradingsGradingIdAnalyticsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/gradings/$gradingId/result': {
      id: '/_authenticated/gradings/$gradingId/result'
      path: '/gradings/$gradingId/result'
      fullPath: '/gradings/$gradingId/result'
      preLoaderRoute: typeof AuthenticatedGradingsGradingIdResultImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/gradings/$gradingId/': {
      id: '/_authenticated/gradings/$gradingId/'
      path: '/gradings/$gradingId'
      fullPath: '/gradings/$gradingId'
      preLoaderRoute: typeof AuthenticatedGradingsGradingIdIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/gradings/$gradingId/assessments/$assessmentId': {
      id: '/_authenticated/gradings/$gradingId/assessments/$assessmentId'
      path: '/gradings/$gradingId/assessments/$assessmentId'
      fullPath: '/gradings/$gradingId/assessments/$assessmentId'
      preLoaderRoute: typeof AuthenticatedGradingsGradingIdAssessmentsAssessmentIdImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface AuthenticatedRouteRouteChildren {
  AuthenticatedChatRoute: typeof AuthenticatedChatRoute
  AuthenticatedHomeRoute: typeof AuthenticatedHomeRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedTestRoute: typeof AuthenticatedTestRoute
  AuthenticatedGradingsCreateRoute: typeof AuthenticatedGradingsCreateRoute
  AuthenticatedGradingsViewRoute: typeof AuthenticatedGradingsViewRoute
  AuthenticatedRubricsIdRoute: typeof AuthenticatedRubricsIdRoute
  AuthenticatedRubricsCreateRoute: typeof AuthenticatedRubricsCreateRoute
  AuthenticatedRubricsViewRoute: typeof AuthenticatedRubricsViewRoute
  AuthenticatedGradingsGradingIdAnalyticsRoute: typeof AuthenticatedGradingsGradingIdAnalyticsRoute
  AuthenticatedGradingsGradingIdResultRoute: typeof AuthenticatedGradingsGradingIdResultRoute
  AuthenticatedGradingsGradingIdIndexRoute: typeof AuthenticatedGradingsGradingIdIndexRoute
  AuthenticatedGradingsGradingIdAssessmentsAssessmentIdRoute: typeof AuthenticatedGradingsGradingIdAssessmentsAssessmentIdRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedChatRoute: AuthenticatedChatRoute,
  AuthenticatedHomeRoute: AuthenticatedHomeRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedTestRoute: AuthenticatedTestRoute,
  AuthenticatedGradingsCreateRoute: AuthenticatedGradingsCreateRoute,
  AuthenticatedGradingsViewRoute: AuthenticatedGradingsViewRoute,
  AuthenticatedRubricsIdRoute: AuthenticatedRubricsIdRoute,
  AuthenticatedRubricsCreateRoute: AuthenticatedRubricsCreateRoute,
  AuthenticatedRubricsViewRoute: AuthenticatedRubricsViewRoute,
  AuthenticatedGradingsGradingIdAnalyticsRoute:
    AuthenticatedGradingsGradingIdAnalyticsRoute,
  AuthenticatedGradingsGradingIdResultRoute:
    AuthenticatedGradingsGradingIdResultRoute,
  AuthenticatedGradingsGradingIdIndexRoute:
    AuthenticatedGradingsGradingIdIndexRoute,
  AuthenticatedGradingsGradingIdAssessmentsAssessmentIdRoute:
    AuthenticatedGradingsGradingIdAssessmentsAssessmentIdRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/chat': typeof AuthenticatedChatRoute
  '/home': typeof AuthenticatedHomeRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/test': typeof AuthenticatedTestRoute
  '/gradings/create': typeof AuthenticatedGradingsCreateRoute
  '/gradings/view': typeof AuthenticatedGradingsViewRoute
  '/rubrics/$id': typeof AuthenticatedRubricsIdRoute
  '/rubrics/create': typeof AuthenticatedRubricsCreateRoute
  '/rubrics/view': typeof AuthenticatedRubricsViewRoute
  '/gradings/$gradingId/analytics': typeof AuthenticatedGradingsGradingIdAnalyticsRoute
  '/gradings/$gradingId/result': typeof AuthenticatedGradingsGradingIdResultRoute
  '/gradings/$gradingId': typeof AuthenticatedGradingsGradingIdIndexRoute
  '/gradings/$gradingId/assessments/$assessmentId': typeof AuthenticatedGradingsGradingIdAssessmentsAssessmentIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/chat': typeof AuthenticatedChatRoute
  '/home': typeof AuthenticatedHomeRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/test': typeof AuthenticatedTestRoute
  '/gradings/create': typeof AuthenticatedGradingsCreateRoute
  '/gradings/view': typeof AuthenticatedGradingsViewRoute
  '/rubrics/$id': typeof AuthenticatedRubricsIdRoute
  '/rubrics/create': typeof AuthenticatedRubricsCreateRoute
  '/rubrics/view': typeof AuthenticatedRubricsViewRoute
  '/gradings/$gradingId/analytics': typeof AuthenticatedGradingsGradingIdAnalyticsRoute
  '/gradings/$gradingId/result': typeof AuthenticatedGradingsGradingIdResultRoute
  '/gradings/$gradingId': typeof AuthenticatedGradingsGradingIdIndexRoute
  '/gradings/$gradingId/assessments/$assessmentId': typeof AuthenticatedGradingsGradingIdAssessmentsAssessmentIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_authenticated/chat': typeof AuthenticatedChatRoute
  '/_authenticated/home': typeof AuthenticatedHomeRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/test': typeof AuthenticatedTestRoute
  '/_authenticated/gradings/create': typeof AuthenticatedGradingsCreateRoute
  '/_authenticated/gradings/view': typeof AuthenticatedGradingsViewRoute
  '/_authenticated/rubrics/$id': typeof AuthenticatedRubricsIdRoute
  '/_authenticated/rubrics/create': typeof AuthenticatedRubricsCreateRoute
  '/_authenticated/rubrics/view': typeof AuthenticatedRubricsViewRoute
  '/_authenticated/gradings/$gradingId/analytics': typeof AuthenticatedGradingsGradingIdAnalyticsRoute
  '/_authenticated/gradings/$gradingId/result': typeof AuthenticatedGradingsGradingIdResultRoute
  '/_authenticated/gradings/$gradingId/': typeof AuthenticatedGradingsGradingIdIndexRoute
  '/_authenticated/gradings/$gradingId/assessments/$assessmentId': typeof AuthenticatedGradingsGradingIdAssessmentsAssessmentIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/signin'
    | '/signup'
    | '/chat'
    | '/home'
    | '/profile'
    | '/test'
    | '/gradings/create'
    | '/gradings/view'
    | '/rubrics/$id'
    | '/rubrics/create'
    | '/rubrics/view'
    | '/gradings/$gradingId/analytics'
    | '/gradings/$gradingId/result'
    | '/gradings/$gradingId'
    | '/gradings/$gradingId/assessments/$assessmentId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/signin'
    | '/signup'
    | '/chat'
    | '/home'
    | '/profile'
    | '/test'
    | '/gradings/create'
    | '/gradings/view'
    | '/rubrics/$id'
    | '/rubrics/create'
    | '/rubrics/view'
    | '/gradings/$gradingId/analytics'
    | '/gradings/$gradingId/result'
    | '/gradings/$gradingId'
    | '/gradings/$gradingId/assessments/$assessmentId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_authenticated'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_authenticated/chat'
    | '/_authenticated/home'
    | '/_authenticated/profile'
    | '/_authenticated/test'
    | '/_authenticated/gradings/create'
    | '/_authenticated/gradings/view'
    | '/_authenticated/rubrics/$id'
    | '/_authenticated/rubrics/create'
    | '/_authenticated/rubrics/view'
    | '/_authenticated/gradings/$gradingId/analytics'
    | '/_authenticated/gradings/$gradingId/result'
    | '/_authenticated/gradings/$gradingId/'
    | '/_authenticated/gradings/$gradingId/assessments/$assessmentId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_authenticated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/signin",
        "/_auth/signup"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/chat",
        "/_authenticated/home",
        "/_authenticated/profile",
        "/_authenticated/test",
        "/_authenticated/gradings/create",
        "/_authenticated/gradings/view",
        "/_authenticated/rubrics/$id",
        "/_authenticated/rubrics/create",
        "/_authenticated/rubrics/view",
        "/_authenticated/gradings/$gradingId/analytics",
        "/_authenticated/gradings/$gradingId/result",
        "/_authenticated/gradings/$gradingId/",
        "/_authenticated/gradings/$gradingId/assessments/$assessmentId"
      ]
    },
    "/_auth/signin": {
      "filePath": "_auth/signin.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/_authenticated/chat": {
      "filePath": "_authenticated/chat.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/home": {
      "filePath": "_authenticated/home.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/test": {
      "filePath": "_authenticated/test.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/gradings/create": {
      "filePath": "_authenticated/gradings/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/gradings/view": {
      "filePath": "_authenticated/gradings/view.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/rubrics/$id": {
      "filePath": "_authenticated/rubrics/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/rubrics/create": {
      "filePath": "_authenticated/rubrics/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/rubrics/view": {
      "filePath": "_authenticated/rubrics/view.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/gradings/$gradingId/analytics": {
      "filePath": "_authenticated/gradings/$gradingId/analytics.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/gradings/$gradingId/result": {
      "filePath": "_authenticated/gradings/$gradingId/result.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/gradings/$gradingId/": {
      "filePath": "_authenticated/gradings/$gradingId/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/gradings/$gradingId/assessments/$assessmentId": {
      "filePath": "_authenticated/gradings/$gradingId/assessments/$assessmentId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
