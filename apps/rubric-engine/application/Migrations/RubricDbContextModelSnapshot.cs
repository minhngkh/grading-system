// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RubricEngine.Application.Models;

#nullable disable

namespace RubricEngine.Application.Migrations
{
    [DbContext(typeof(RubricDbContext))]
    partial class RubricDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RubricEngine.Application.Rubrics.Rubric", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.PrimitiveCollection<List<string>>("PerformanceTags")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("RubricName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TeacherId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Rubrics");
                });

            modelBuilder.Entity("RubricEngine.Application.Rubrics.Rubric", b =>
                {
                    b.OwnsMany("RubricEngine.Application.Rubrics.CriterionApiContract", "Criteria", b1 =>
                        {
                            b1.Property<string>("RubricId")
                                .HasColumnType("character varying(50)");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<decimal>("Weight")
                                .HasColumnType("numeric");

                            b1.HasKey("RubricId", "__synthesizedOrdinal");

                            b1.ToTable("Rubrics");

                            b1.ToJson("Criteria");

                            b1.WithOwner()
                                .HasForeignKey("RubricId");

                            b1.OwnsMany("RubricEngine.Application.Rubrics.PerformanceLevelApiContract", "Levels", b2 =>
                                {
                                    b2.Property<string>("CriterionApiContractRubricId")
                                        .HasColumnType("character varying(50)");

                                    b2.Property<int>("CriterionApiContract__synthesizedOrdinal")
                                        .HasColumnType("integer");

                                    b2.Property<int>("__synthesizedOrdinal")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Tag")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<decimal>("Weight")
                                        .HasColumnType("numeric");

                                    b2.HasKey("CriterionApiContractRubricId", "CriterionApiContract__synthesizedOrdinal", "__synthesizedOrdinal");

                                    b2.ToTable("Rubrics");

                                    b2.WithOwner()
                                        .HasForeignKey("CriterionApiContractRubricId", "CriterionApiContract__synthesizedOrdinal");
                                });

                            b1.Navigation("Levels");
                        });

                    b.Navigation("Criteria");
                });
#pragma warning restore 612, 618
        }
    }
}
